* Machine Learning models for Linkedinfo.co 
A topic tags prediction service for technical articles. Find the service at
https://ml.linkedinfo.co/ 
** Uage

#+BEGIN_SRC shell
Usage: service.py [OPTIONS] COMMAND [ARGS]...

Commands:
  build
  deploy
  run

-----
Usage: service.py run [OPTIONS]

Options:
  --local / --container
  --help                 Show this message and exit.

-----
Usage: service.py build [OPTIONS]

Options:
  --local / --cloud
  --run
  --deploy
  --help             Show this message and exit.

#+END_SRC

** TODOs
 - [X] Language identification model for info text
 - [ ] Text-based info tags prediction model 
    - [X] LinearSVC
    - [X] Gradient Boosting
    - [X] BERT (bert-tiny now)
    - [ ] Stacking models with other feature like title, author, host, etc.
    - [ ] separate models for en and cn
    - [X] retrieve all new infos
    - [X] filter minority tags
    - [X] text augmentation and oversampling
    - [ ] try different classifier layer when there's more data
    - [ ] search more suitable data for training
   - [ ] Graph-based info tags prediction model 
   - [ ] Try different sampling methods
   - [ ] concate title, text, author, and other metadata as features https://github.com/malteos/pytorch-bert-document-classification
 - [X] Migrate to GCloud run
 - [ ] limit length of text
 - [ ] accept url to predict with extraction
** Info tags prediction
Model is trained offline and persisted. The persisted model should be placed under =./data/models/= to be loaded by the Web service.
